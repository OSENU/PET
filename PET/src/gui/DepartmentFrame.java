/*
 * Класс описывает окна с таблицей факультетов
 * Все действия происходят в этом класе
 * У класса есть два диалога:
 * 
 * 1) Диалог Добавления-Редактирования
 * 2) Диалог Ошибки
 * 
 * Перед открытием диалога, наше окно необходимо диактевировать
 * Как только диалог закрывается, мы возобновляем диалог
 */
package gui;

import database.DepartmentTableModal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import settings.ConfigureProgramm;

/**
 *
 * @author Aleo
 */
public class DepartmentFrame extends javax.swing.JFrame {
    
    private boolean isAddNewDepartment = false;
    private Object objectWhoCreateDialog = null;
    /**
     * Creates new form DepartmentFrame
     */
    public DepartmentFrame() {        
        initComponents();
        updateTableDepartment();
    }
    
    private void updateTableDepartment(){
        
        try {
            DepartmentTableModal modal = new DepartmentTableModal();
            jTableDepartment.setModel(modal);
        } catch (SQLException ex) {
            Logger.getLogger(DepartmentFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(! ConfigureProgramm.isDEBAG()){
            // Если программа не врежиме отладки, то скроем колонку с id
            jTableDepartment.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableDepartment.getColumnModel().getColumn(0).setMinWidth(0);
            jTableDepartment.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableDepartment.getColumnModel().getColumn(0).setResizable(false);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDepartment = new javax.swing.JTable();
        jButtonAdd = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Кафедры");
        setAlwaysOnTop(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setType(java.awt.Window.Type.UTILITY);

        jTableDepartment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Загрузка"
            }
        ));
        jScrollPane1.setViewportView(jTableDepartment);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );

        jButtonAdd.setText("Добавить");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Изменить");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEdit)
                        .addGap(0, 172, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Событие нажатия кнопки добавления кафедры
     * Необходимо показать окно, а наше окно сделать не активным
     * @param evt 
     */
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String nameDepartment;
        this.setEnabled(false);
        do{
            nameDepartment = JOptionPane.showInputDialog
                    (this, "Введите название кафедры:", "Ввод данных", 
                    JOptionPane.INFORMATION_MESSAGE);
            if(nameDepartment != null){
                if(nameDepartment.trim().length() > 0){
                    JOptionPane.showMessageDialog(this, nameDepartment, "Результат", JOptionPane.INFORMATION_MESSAGE);
                    if(inputIntoDepartment(nameDepartment)){
                        // Выходим с цикла
                        break;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Вы ничего не ввели", 
                            "Пустая строка", JOptionPane.WARNING_MESSAGE);
                }
            }
        }while(nameDepartment != null);
        this.setEnabled(true);
    }//GEN-LAST:event_jButtonAddActionPerformed
    
    /**
     * Событие нажатия кнопки редактирования значения в таблице
     * @param evt 
     */
    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        
    }//GEN-LAST:event_jButtonEditActionPerformed
    
    private boolean inputIntoDepartment(String name){
        boolean ret = true;
        try {
            Connection conn = database.DataBaseConnect.getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("Select * "
                    + "from Department where name_department = '"+name+"';");
            if(!rs.next()){
                // Значит в базе такого значения нет
                int resalt = st.executeUpdate("insert into "
                        + "department(name_department) values('"+name+"');");
                if(resalt == 0){
                    JOptionPane.showMessageDialog(this, 
                            "Произошла ошибка при добавлении значения.", 
                            "Ошибка добавления", JOptionPane.ERROR_MESSAGE);
                } else{
                    // Все прошло удачно, можем обновить таблицу
                    this.updateTableDepartment();
                }
            } else {
                // Такое значение уже есть
                int resalt = JOptionPane.showConfirmDialog
                        (this, "Такое значение уже есть.\n"
                        + "Хотете еще раз ввести значение?", "Ошибка!", 
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if(resalt == JOptionPane.YES_OPTION){
                    ret = false;
                } else{
                    ret = true;
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), 
                    "Ошибка добавления", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DepartmentFrame.class.getName())
                    .log(Level.SEVERE, null, ex);
        } finally {
            return ret;
        }
        
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDepartment;
    // End of variables declaration//GEN-END:variables
}
